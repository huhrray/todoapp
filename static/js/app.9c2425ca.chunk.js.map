{"version":3,"sources":["AddTodos.js","header.js","TodoItem.js","App.js"],"names":["AddTodos","addTodo","useState","text","setText","View","TextInput","style","styles","input","placeholder","onChangeText","val","Button","onPress","title","color","StyleSheet","create","marginBottom","paddingHorizontal","paddingVertical","borderBottomWidth","borderColor","Header","props","header","Text","height","paddingTop","backgroundColor","fontSize","fontWeight","textAlign","TodoItem","item","pressHandler","TouchableOpacity","key","MaterialIcons","name","size","itemText","padding","marginTop","borderWidth","borderStyle","borderRadius","flexDirection","marginLeft","App","todos","setTodos","setKeys","prevTodos","filter","todo","TouchableWithoutFeedback","Keyboard","dismiss","container","StatusBar","content","length","toString","Alert","alert","list","FlatList","data","keyExtractor","renderItem","flex"],"mappings":"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","file":"static/js/app.9c2425ca.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport {StyleSheet, Text, TextInput, Button, View} from 'react-native'\r\n\r\nexport default function AddTodos({addTodo}) {\r\n    const [text, setText] = useState('')\r\n    const changeHandler = (val) =>{\r\n        setText(val)\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <TextInput \r\n                style={styles.input}\r\n                placeholder='new todo...'\r\n                onChangeText={changeHandler}\r\n            />\r\n            <Button \r\n                onPress={()=>addTodo(text)}\r\n                title='add'\r\n                color='#FBAA4C'\r\n            />\r\n        </View>\r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input:{\r\n        marginBottom:10,\r\n        paddingHorizontal:8,\r\n        paddingVertical:6,\r\n        borderBottomWidth:1,\r\n        borderColor:'#ddd'\r\n    }\r\n})\r\n\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <View style={styles.header}>\r\n            <Text style={styles.title}>My Todos</Text>\r\n        </View>\r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header:{\r\n        height:90,\r\n        paddingTop:50,\r\n        backgroundColor:'#FBAA4C'\r\n    },\r\n    title:{\r\n        color:'#fff',\r\n        fontSize:20,\r\n        fontWeight:\"bold\",\r\n        textAlign:\"center\"\r\n    }\r\n\r\n})\r\n\r\n","import React from 'react';\r\nimport { Text, StyleSheet, TouchableOpacity, View} from 'react-native';\r\nimport {MaterialIcons} from '@expo/vector-icons'\r\n\r\nexport default function TodoItem({item, pressHandler}) {\r\n    return (\r\n    <TouchableOpacity onPress={()=>pressHandler(item.key)} >\r\n        <View style={styles.item}>\r\n            <MaterialIcons name='delete' size={18} color='#333'/>\r\n            <Text style ={styles.itemText}>{item.text}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n      \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        padding:16,\r\n        marginTop:16,\r\n        borderColor:'#bbb',\r\n        borderWidth:1,\r\n        borderStyle:'dashed',\r\n        borderRadius:10,\r\n        fontSize:15,\r\n        flexDirection:'row'\r\n    },\r\n    itemText:{\r\n        marginLeft:10\r\n    }\r\n})","import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { Alert, FlatList, Keyboard, StyleSheet, TouchableWithoutFeedback, View} from 'react-native';\nimport AddTodos from './AddTodos';\nimport Header from './header'\nimport TodoItem from './TodoItem';\n\nexport default function App() {\n  const [todos, setTodos] =useState([\n    {text:'add your todo' , key:0}\n  ])\n  const [key, setKeys] =useState(1)\n\n  const pressHandler = (key) =>{\n    setTodos((prevTodos)=>{\n      return prevTodos.filter(todo=> todo.key != key)\n    })\n  }\n\n  const addTodo = (text) => {\n    if(text.length > 0){\n      setKeys(key+1)\n      setTodos((prevTodos)=>{\n        return [...prevTodos, {text: text, key: key.toString()}]\n      })\n    } else{\n      Alert.alert('Oops!',\"You can't add an empty todo\",[\n        {text: 'Understood'}\n      ])\n    }\n  }\n\n  return (\n\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss()}>\n      <View style={styles.container}>\n        <StatusBar style=\"auto\" />\n        <Header />\n        <View style={styles.content}>\n          <AddTodos addTodo={addTodo} />\n          <View style={styles.list}>\n            <FlatList\n              data={todos} \n              keyExtractor={(item) => item.key.toString()}\n              renderItem={({item})=>(\n                  <TodoItem item={item} pressHandler={pressHandler}/>            \n                )}\n            />\n          </View>  \n        </View> \n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  content: {\n    flex: 1,\n    padding: 40,\n  },\n  list: {\n    flex: 1,\n    marginTop:20\n  }\n\n\n});\n"],"sourceRoot":""}